drop table if exists analytics;
create table analytics (
  request_id UUID DEFAULT generateUUIDv4(),
  app_id String,
  blog_id String materialized accurateCastOrDefault(attributes['blogId'], 'String', '1'),
  network_id String materialized accurateCastOrDefault(attributes['networkId'], 'String', '1'),
  blog_url String materialized attributes['blog'],
  network_url String materialized attributes['network'],
  event_type LowCardinality(String),
  event_timestamp Datetime64(3, 'UTC'),
  arrival_timestamp Datetime64(3, 'UTC') DEFAULT now64(3),
  attributes Map(LowCardinality(String), String),
  url String materialized attributes['url'],
  host String materialized attributes['host'],
  referer String materialized attributes['referer'],
  referers Array(String) materialized endpoint_attributes['referer'],
  initial_referer String materialized arrayStringConcat(endpoint_attributes['initialReferer']),
  author String materialized attributes['author'],
  author_id String materialized attributes['authorId'],
  archive_type String materialized attributes['archiveType'],
  item_id String materialized multiIf(
    event_type = 'pageView' AND attributes['postId'] != '', attributes['postId'],
    event_type = 'pageView' AND attributes['termId'] != '', attributes['termId'],
    event_type = 'pageView' AND attributes['authorId'] != '', attributes['authorID'],
    event_type IN ( 'blockView', 'blockLoad', 'conversion' ) AND attributes['blockId'] != '', attributes['blockId'],
    attributes['broadcastId'] != '', attributes['broadcastId'],
    attributes['clientId']
  ),
  post_id String materialized attributes['postId'],
  block_id String materialized attributes['blockId'],
  block_author_id String materialized attributes['blockAuthorId'],
  block_client_id String materialized attributes['clientId'],
  block_type String materialized attributes['type'],
  broadcast_id String materialized attributes['broadcastId'],
  test_id String materialized attributes['eventTestId'],
  test_post_id String materialized attributes['eventPostId'],
  test_variant_id String materialized attributes['eventVariantId'],
  goal String materialized attributes['goal'],
  audience String materialized attributes['audience'],
  search String materialized attributes['search'],
  metrics Map(LowCardinality(String), Float64),
  endpoint_id UUID,
  endpoint_creation_date Datetime64(3, 'UTC'),
  endpoint_effective_date Datetime64(3, 'UTC'),
  endpoint_attributes Map(LowCardinality(String), Array(String)),
  endpoint_metrics Map(LowCardinality(String), Float64),
  endpoint_address Nullable(String),
  endpoint_optout String,
  utm_campaign Array(String) materialized endpoint_attributes['utm_campaign'],
  utm_source Array(String) materialized endpoint_attributes['utm_source'],
  utm_medium Array(String) materialized endpoint_attributes['utm_medium'],
  utm_term Array(String) materialized endpoint_attributes['utm_term'],
  utm_content Array(String) materialized endpoint_attributes['utm_content'],
  current_utm_campaign String materialized attributes['qv_utm_campaign'],
  current_utm_source String materialized attributes['qv_utm_source'],
  current_utm_medium String materialized attributes['qv_utm_medium'],
  current_utm_term String materialized attributes['qv_utm_term'],
  current_utm_content String materialized attributes['qv_utm_content'],
  initial_utm_campaign String materialized arrayStringConcat(endpoint_attributes['initial_utm_campaign']),
  initial_utm_source String materialized arrayStringConcat(endpoint_attributes['initial_utm_source']),
  initial_utm_medium String materialized arrayStringConcat(endpoint_attributes['initial_utm_medium']),
  initial_utm_term String materialized arrayStringConcat(endpoint_attributes['initial_utm_term']),
  initial_utm_content String materialized arrayStringConcat(endpoint_attributes['initial_utm_content']),
  endpoint_views UInt32 materialized endpoint_metrics['pageViews'],
  endpoint_sessions UInt32 materialized endpoint_metrics['sessions'],
  app_version String,
  locale String,
  make LowCardinality(String),
  model LowCardinality(String),
  model_version String,
  platform LowCardinality(String),
  platform_version String,
  country LowCardinality(String),
  city Nullable(String),
  postal_code Nullable(String),
  region Nullable(String),
  user_id Nullable(String),
  user_attributes Map(LowCardinality(String), Array(String)),
  browser_session_id UUID materialized attributes['session'],
  page_session_id UUID materialized attributes['pageSession'],
  session_id UUID,
  session_start Nullable(Datetime64(3, 'UTC')),
  session_stop Nullable(Datetime64(3, 'UTC')),
  session_duration Nullable(Int64)
)
engine = MergeTree
order by (app_id, blog_id, event_type, toStartOfDay(event_timestamp), endpoint_id, event_timestamp)
partition by toStartOfMonth(event_timestamp)
ttl toStartOfDay(event_timestamp) + interval 180 day
--   group by event_type, app_id, blog_id, toStartOfDay(event_timestamp)
--     set
--       event_timestamp = toStartOfDay(event_timestamp),
--       views = count(),
--       uniques = uniqCombined64(endpoint_id),
--       top_urls = topK(10)(url);
